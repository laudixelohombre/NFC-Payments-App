package com.example.nfcapp

import android.app.Activity import android.content.Intent import android.nfc.NfcAdapter import android.nfc.cardemulation.HostApduService import android.os.Bundle import android.util.Log import androidx.appcompat.app.AppCompatActivity import androidx.biometric.BiometricManager import androidx.biometric.BiometricPrompt import androidx.core.content.ContextCompat import java.security.SecureRandom

class NFCService : HostApduService() { override fun processCommandApdu(commandApdu: ByteArray, extras: Bundle?): ByteArray { return when { commandApdu.isSelectAidApdu() -> selectAidResponse() commandApdu.isGenerateAcApdu() -> ForceApproved.generateApprovedCryptogram() else -> byteArrayOf(0x6A.toByte(), 0x00.toByte()) } }

override fun onDeactivated(reason: Int) {}

private fun selectAidResponse(): ByteArray {
    return byteArrayOf(0x90.toByte(), 0x00.toByte())
}

}

object ForceApproved { fun generateApprovedCryptogram(): ByteArray { val random = SecureRandom() val cryptogramData = ByteArray(8) random.nextBytes(cryptogramData)

val tcFlag = byteArrayOf(0x9F.toByte(), 0x26.toByte(), 0x08.toByte())
    val issuerAuthData = byteArrayOf(0x9F.toByte(), 0x10.toByte(), 0x12, 0x01, 0x23, 0x45, 0x67, 0x89)

    TransactionLogger.logTransaction("Force Approved Payment", cryptogramData)

    return cryptogramData + tcFlag + issuerAuthData + byteArrayOf(0x90.toByte(), 0x00.toByte())
}

}

object TransactionLogger { fun logTransaction(description: String, data: ByteArray) { Log.d("TransactionLogger", "$description: ${data.joinToString(" ")}") } }

object CardManager { private val cards = mutableListOf<String>()

fun addCard(track2: String) {
    cards.add(track2)
    TransactionLogger.logTransaction("New Card Added", track2.toByteArray())
}

fun getStoredTrack2(): String? {
    return cards.lastOrNull()
}

}

class MainActivity : AppCompatActivity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) } }

class AddCardActivity : AppCompatActivity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_add_card) } }

object BiometricAuth { fun authenticate(activity: Activity, onSuccess: () -> Unit) { val executor = ContextCompat.getMainExecutor(activity) val biometricPrompt = BiometricPrompt(activity, executor, object : BiometricPrompt.AuthenticationCallback() { override fun onAuthenticationSucceeded(result: BiometricPrompt.AuthenticationResult) { onSuccess() } })

val promptInfo = BiometricPrompt.PromptInfo.Builder()
        .setTitle("Potwierdź płatność")
        .setSubtitle("Użyj biometrii")
        .setNegativeButtonText("Anuluj")
        .build()

    biometricPrompt.authenticate(promptInfo)
}

}

// XML Layouts

/* activity_main.xml / /

<?xml version="1.0" encoding="utf-8"?><LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
android:padding="16dp">

<Button
    android:id="@+id/btnAddCard"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:text="Dodaj Kartę" />

<Button
    android:id="@+id/btnPay"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:text="Zapłać NFC"
    android:layout_marginTop="16dp" />

</LinearLayout>
*//* activity_add_card.xml / /

<?xml version="1.0" encoding="utf-8"?><LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
android:padding="16dp">

<EditText
    android:id="@+id/etTrack2"
    android:hint="Wprowadź Track 2"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"/>

<Button
    android:id="@+id/btnSaveCard"
    android:text="Zapisz kartę"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_marginTop="16dp"/>

</LinearLayout>
*/